#                 from  n    params  module                                  arguments
#  0                -1      1760  models.layers.common_layer.Conv         [3, 16, 6, 2, 2]
#  1                -1      4672  models.layers.common_layer.Conv         [16, 32, 3, 2]
#  2                -1      4800  models.layers.yolo_layer.C3             [32, 32, 1]
#  3                -1     18560  models.layers.common_layer.Conv         [32, 64, 3, 2]
#  4                -1     29184  models.layers.yolo_layer.C3             [64, 64, 2]
#  5                -1     73984  models.layers.common_layer.Conv         [64, 128, 3, 2]
#  6                -1    156928  models.layers.yolo_layer.C3             [128, 128, 3]
#  7                -1    295424  models.layers.common_layer.Conv         [128, 256, 3, 2]
#  8                -1    296448  models.layers.yolo_layer.C3             [256, 256, 1]
#  9                -1    164608  models.layers.yolo_layer.SPPF           [256, 256, 5]
# 10                -1     20560  models.head.Classify                    [256, 80]
#Model Summary: 155layers, 1066928 parameters, 1066928 gradients,image size is 640, 2.8 GFLOPs in cpu
# time (ms)     GFLOPs     params                                    module                       input_size
#     12.45     2.9360       1760  models.layers.common_layer.Conv           torch.Size([8, 3, 640, 640])
#      5.10     1.9399       4672  models.layers.common_layer.Conv           torch.Size([8, 16, 320, 320])
#      2.75     2.0447       4800  models.layers.yolo_layer.C3               torch.Size([8, 32, 160, 160])
#      0.50     1.9137      18560  models.layers.common_layer.Conv           torch.Size([8, 32, 160, 160])
#      1.90     3.0409      29184  models.layers.yolo_layer.C3               torch.Size([8, 64, 80, 80])
#      0.30     1.9005      73984  models.layers.common_layer.Conv           torch.Size([8, 64, 80, 80])
#      1.80     4.0501     156928  models.layers.yolo_layer.C3               torch.Size([8, 128, 40, 40])
#      0.20     1.8940     295424  models.layers.common_layer.Conv           torch.Size([8, 128, 40, 40])
#      0.90     1.9071     296448  models.layers.yolo_layer.C3               torch.Size([8, 256, 20, 20])
#      0.50     1.0584     164608  models.layers.yolo_layer.SPPF             torch.Size([8, 256, 20, 20])
#      0.20     0.0020      20560  models.head.Classify                      torch.Size([8, 256, 20, 20])
# Parameters
depth_multiple: 0.33  # model depth multiple
width_multiple: 0.50 # layer channel multiple
depth_layer: [C3]
width_layer: [Conv, C3, SPPF, Classify]
nc: 80

backbone:
  [[-1, Conv, [32, 6, 2, 2]],  # 0-P1/2
   [-1, Conv, [32, 64, 3, 2]],  # 1-P2/4
   [-1, C3, [64, 64, 3]],
   [-1, Conv, [64, 128, 3, 2]],  # 3-P3/8
   [-1, C3, [128, 128, 6]],
   [-1, Conv, [128, 256, 3, 2]],  # 5-P4/16
   [-1, C3, [256, 256, 9]],
   [-1, Conv, [256, 512, 3, 2]], # 7-P5/32
   [-1, C3, [512, 512, 3]],
   [-1, SPPF, [512, 512, 5]],  # 9
  ]

head:
  [
    #[[17, 20, 23], Classify, [1024, 2]],  # Detect(P3, P4, P5)
    [-1, Classify, [512, nc]],  # Detect(P3, P4, P5)
  ]

