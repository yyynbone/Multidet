# Parameters
depth_multiple: 1.  # model depth multiple
width_multiple: 0.5  # layer channel multiple
depth_layer: [C2f]
width_layer: [Conv, C2f, SPPF, AnchorFreeDetect]

# [from,  module, args], args=[ch_in , ch_out, etc]
backbone:
  [[-1, Conv, [32, 6, 2, 2]],  # 0-P1/2
   [-1, Conv, [32, 64, 3, 2]],  # 1-P2/4
   [-1, C2f, [64, 64, 3]],
   [-1, Conv, [64, 128, 3, 2]],  # 3-P3/8
   [-1, C2f, [128, 128, 6]],
   [-1, Conv, [128, 256, 3, 2]],  # 5-P4/16
   [-1, C2f, [256, 256, 9]],
   [-1, Conv, [256, 512, 3, 2]], # 7-P5/32
   [-1, C2f, [512, 512, 3]],
   [-1, SPPF, [512, 512, 5]],  # 9
  ]

neck:
  [[-1, Conv, [512, 512, 1, 1]],
   [-1, C2f, [512, 512, 3, False]],  # 11 (P5/32-big)

   [-1, Conv, [512, 256, 1, 1]],
   [-1, nn.Upsample,  [None, 2, 'nearest']],
   [[-1, 6], Concat,  [1]],  # cat backbone P4/16-medium
   [-1, C2f, [512, 256, 3,  False]], #15

   [-1, Conv, [256, 128, 1, 1]],
   [-1, nn.Upsample,  [None, 2, 'nearest']],
   [[-1, 4], Concat,  [1]],  # cat head P5
   [-1, C2f, [256, 128, 3, False]],  # 19 (P3/8-small)
  ]

head:
  [[[19, 15, 11], AnchorFreeDetect, [[128, 256, 512], nc, 4]], # Detect(P3, P4, P5)
  ]

#2023-07-05 17:21:31,923-
#                 from  n    params  module                                  arguments
#2023-07-05 17:21:31,923-  0                -1      1760  models.layers.common_layer.Conv         [3, 16, 6, 2, 2]
#2023-07-05 17:21:31,924-  1                -1      4672  models.layers.common_layer.Conv         [16, 32, 3, 2]
#2023-07-05 17:21:31,924-  2                -1      7360  models.layers.yolo_layer.C2f            [32, 32, 1]
#2023-07-05 17:21:31,925-  3                -1     18560  models.layers.common_layer.Conv         [32, 64, 3, 2]
#2023-07-05 17:21:31,926-  4                -1     49664  models.layers.yolo_layer.C2f            [64, 64, 2]
#2023-07-05 17:21:31,926-  5                -1     73984  models.layers.common_layer.Conv         [64, 128, 3, 2]
#2023-07-05 17:21:31,929-  6                -1    279808  models.layers.yolo_layer.C2f            [128, 128, 3]
#2023-07-05 17:21:31,930-  7                -1    295424  models.layers.common_layer.Conv         [128, 256, 3, 2]
#2023-07-05 17:21:31,932-  8                -1    460288  models.layers.yolo_layer.C2f            [256, 256, 1]
#2023-07-05 17:21:31,934-  9                -1    164608  models.layers.yolo_layer.SPPF           [256, 256, 5]
#2023-07-05 17:21:31,934- 10                -1     66048  models.layers.common_layer.Conv         [256, 256, 1, 1]
#2023-07-05 17:21:31,937- 11                -1    460288  models.layers.yolo_layer.C2f            [256, 256, 1, False]
#2023-07-05 17:21:31,937- 12                -1     33024  models.layers.common_layer.Conv         [256, 128, 1, 1]
#2023-07-05 17:21:31,937- 13                -1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
#2023-07-05 17:21:31,937- 14           [-1, 6]         0  models.layers.common_layer.Concat       [1]
#2023-07-05 17:21:31,938- 15                -1    131840  models.layers.yolo_layer.C2f            [256, 128, 1, False]
#2023-07-05 17:21:31,939- 16                -1      8320  models.layers.common_layer.Conv         [128, 64, 1, 1]
#2023-07-05 17:21:31,939- 17                -1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
#2023-07-05 17:21:31,939- 18           [-1, 4]         0  models.layers.common_layer.Concat       [1]
#2023-07-05 17:21:31,940- 19                -1     33152  models.layers.yolo_layer.C2f            [128, 64, 1, False]
#2023-07-05 17:21:31,940- 20      [19, 15, 11]     12177  models.head.Detect                      [[64, 128, 256], 4, [[10, 13, 16, 30, 33, 23], [30, 61, 62, 45, 59, 119], [116, 90, 156, 198, 373, 326]]]
#2023-07-05 17:21:32,015-Model Summary: 213layers, 2100977 parameters, 2100977 gradients,image size is (640, 640), 5.1 GFLOPs in cpu
#2023-07-05 17:21:35,087- time (ms)     GFLOPs     params                                    module                       input_size
#2023-07-05 17:21:35,087-      1.50     0.4645       1760  models.layers.common_layer.Conv           torch.Size([1, 3, 540, 960])
#2023-07-05 17:21:35,096-      0.70     0.3069       4672  models.layers.common_layer.Conv           torch.Size([1, 16, 270, 480])
#2023-07-05 17:21:35,148-      1.90     0.4894       7360  models.layers.yolo_layer.C2f              torch.Size([1, 32, 135, 240])
#2023-07-05 17:21:35,154-      0.35     0.3050      18560  models.layers.common_layer.Conv           torch.Size([1, 32, 135, 240])
#2023-07-05 17:21:35,171-      1.30     0.8189      49664  models.layers.yolo_layer.C2f              torch.Size([1, 64, 68, 120])
#2023-07-05 17:21:35,176-      0.40     0.3029      73984  models.layers.common_layer.Conv           torch.Size([1, 64, 68, 120])
#2023-07-05 17:21:35,196-      1.60     1.1468     279808  models.layers.yolo_layer.C2f              torch.Size([1, 128, 34, 60])
#2023-07-05 17:21:35,202-      0.40     0.3019     295424  models.layers.common_layer.Conv           torch.Size([1, 128, 34, 60])
#2023-07-05 17:21:35,212-      0.80     0.4711     460288  models.layers.yolo_layer.C2f              torch.Size([1, 256, 17, 30])
#2023-07-05 17:21:35,220-      0.60     0.1687     164608  models.layers.yolo_layer.SPPF             torch.Size([1, 256, 17, 30])
#2023-07-05 17:21:35,222-      0.10     0.0679      66048  models.layers.common_layer.Conv           torch.Size([1, 256, 17, 30])
#2023-07-05 17:21:35,232-      0.80     0.4711     460288  models.layers.yolo_layer.C2f              torch.Size([1, 256, 17, 30])
#2023-07-05 17:21:35,235-      0.20     0.0339      33024  models.layers.common_layer.Conv           torch.Size([1, 256, 17, 30])
#2023-07-05 17:21:35,236-      0.10     0.0005          0  torch.nn.modules.upsampling.Upsample      torch.Size([1, 128, 17, 30])
#2023-07-05 17:21:35,236-      0.00     0.0000          0  models.layers.common_layer.Concat         [torch.Size([1, 128, 34, 60]), torch.Size([1, 128, 34, 60])]
#2023-07-05 17:21:35,246-      0.80     0.5410     131840  models.layers.yolo_layer.C2f              torch.Size([1, 256, 34, 60])
#2023-07-05 17:21:35,249-      0.20     0.0345       8320  models.layers.common_layer.Conv           torch.Size([1, 128, 34, 60])
#2023-07-05 17:21:35,249-      0.00     0.0010          0  torch.nn.modules.upsampling.Upsample      torch.Size([1, 64, 34, 60])
#2023-07-05 17:21:35,254-      0.35     0.0000          0  models.layers.common_layer.Concat         [torch.Size([1, 64, 68, 120]), torch.Size([1, 64, 68, 120])]
#2023-07-05 17:21:35,263-      0.80     0.5473      33152  models.layers.yolo_layer.C2f              torch.Size([1, 128, 68, 120])
#2023-07-05 17:21:35,281-      1.10     0.0494      12177  models.head.Detect                        [torch.Size([1, 64, 68, 120]), torch.Size([1, 128, 34, 60]), torch.Size([1, 256, 17, 30])]
#2023-07-05 17:21:35,282-     14.00     6.5226    2100977  Total use cuda:0
#2023-07-05 17:21:35,282-     14.00     6.5226    2100977  Per image use cuda:0