# parameters
depth_multiple: 1.0  # model depth multiple
width_multiple: .5  # layer channel multiple

depth_layer: []
width_layer: [Conv, MP, SPPCSPC, RepConv, IDetect]
# anchors
anchors:
  - [12,16, 19,36, 40,28]  # P3/8
  - [36,75, 76,55, 72,146]  # P4/16
  - [142,110, 192,243, 459,401]  # P5/32

# yolov7 backbone
backbone:
# [from,  module, args], args=[ch_in , ch_out, etc]
  [[-1, Conv, [32, 3, 1]],  # 0

   [-1, Conv, [32, 64, 3, 2]],  # 1-P1/2
   [-1, Conv, [64, 64, 3, 1]],

   [-1, Conv, [64, 128, 3, 2]],  # 3-P2/4
   [-1, Conv, [128, 64, 1, 1]], # ELAN_1
   [-2, Conv, [128, 64, 1, 1]],
   [-1, Conv, [64, 64, 3, 1]],
   [-1, Conv, [64, 64, 3, 1]],
   [-1, Conv, [64, 64, 3, 1]],
   [-1, Conv, [64, 64, 3, 1]],
   [[ -1, -3, -5, -6], Concat, [1]],
   [-1, Conv, [256, 256, 1, 1]],  # 11

   [-1, MP, [256, 256]],
   [-1, Conv, [256, 128, 1, 1]],
   [-3, Conv, [256, 128, 1, 1]],
   [-1, Conv, [128, 128, 3, 2]],
   [[-1, -3], Concat, [1]],  # 16-P3/8
   [-1, Conv, [256, 128, 1, 1]], # ELAN_2
   [-2, Conv, [256, 128, 1, 1]],
   [-1, Conv, [128, 128, 3, 1]],
   [-1, Conv, [128, 128, 3, 1]],
   [-1, Conv, [128, 128, 3, 1]],
   [-1, Conv, [128, 128, 3, 1]],
   [[-1, -3, -5, -6], Concat, [1]],
   [-1, Conv, [512, 512, 1, 1]],  # 24

   [-1, MP, [512, 512]],
   [-1, Conv, [512, 256, 1, 1]],
   [-3, Conv, [512, 256, 1, 1]],
   [-1, Conv, [256, 256, 3, 2]],
   [[-1, -3], Concat, [1]],  # 29-P4/16
   [-1, Conv, [512, 256, 1, 1]], # ELAN_3
   [-2, Conv, [512, 256, 1, 1]],
   [-1, Conv, [256, 256, 3, 1]],
   [-1, Conv, [256, 256, 3, 1]],
   [-1, Conv, [256, 256, 3, 1]],
   [-1, Conv, [256, 256, 3, 1]],
   [[ -1, -3, -5, -6 ], Concat, [1]],
   [-1, Conv, [1024, 1024, 1, 1]],  # 37

   [-1, MP, [1024,1024]],
   [-1, Conv, [1024, 512, 1, 1]],
   [-3, Conv, [1024, 512, 1, 1]],
   [-1, Conv, [512, 512, 3, 2]],
   [[-1, -3], Concat, [1]],  # 42-P5/32
   [-1, Conv, [1024, 256, 1, 1]], # ELAN_4
   [-2, Conv, [1024, 256, 1, 1]],
   [-1, Conv, [256, 256, 3, 1]],
   [-1, Conv, [256, 256, 3, 1]],
   [-1, Conv, [256, 256, 3, 1]],
   [-1, Conv, [256, 256, 3, 1]],
   [[-1, -3, -5, -6], Concat, [1]],
   [-1, Conv, [1024, 1024, 1, 1]],  # 50
  ]

# yolov7 head
neck:
  [[-1, SPPCSPC, [1024, 512]], # 51 SSPCSPC

   [-1, Conv, [512, 256, 1, 1]],
   [-1, nn.Upsample, [None, 2, 'nearest']],
   [37, Conv, [1024, 256, 1, 1]], # route backbone P4
   [[-1, -2], Concat, [1]],

   [-1, Conv, [512, 256, 1, 1]], # ELAN_H_1
   [-2, Conv, [512, 256, 1, 1]],
   [-1, Conv, [256, 128, 3, 1]],
   [-1, Conv, [128, 128, 3, 1]],
   [-1, Conv, [128, 128, 3, 1]],
   [-1, Conv, [128, 128, 3, 1]],
   [[-1, -2, -3, -4, -5, -6], Concat, [1]],
   [-1, Conv, [1024, 256, 1, 1]], # 63

   [-1, Conv, [256, 128, 1, 1]],
   [-1, nn.Upsample, [None, 2, 'nearest']],
   [24, Conv, [512, 128, 1, 1]], # route backbone P3
   [[-1, -2], Concat, [1]],

   [-1, Conv, [256, 128, 1, 1]], # ELAN_H_2
   [-2, Conv, [256, 128, 1, 1]],
   [-1, Conv, [128, 64, 3, 1]],
   [-1, Conv, [64, 64, 3, 1]],
   [-1, Conv, [64, 64, 3, 1]],
   [-1, Conv, [64, 64, 3, 1]],
   [[-1, -2, -3, -4, -5, -6], Concat, [1]],
   [-1, Conv, [512, 128, 1, 1]], # 75

   [-1, MP, [128, 128]],
   [-1, Conv, [128, 128, 1, 1]],
   [-3, Conv, [128, 128, 1, 1]],
   [-1, Conv, [128, 128, 3, 2]],
   [[-1, -3, 63], Concat, [1]],

   [-1, Conv, [512, 256, 1, 1]], # ELAN_H_3
   [-2, Conv, [512, 256, 1, 1]],
   [-1, Conv, [256, 128, 3, 1]],
   [-1, Conv, [128, 128, 3, 1]],
   [-1, Conv, [128, 128, 3, 1]],
   [-1, Conv, [128, 128, 3, 1]],
   [[-1, -2, -3, -4, -5, -6], Concat, [1]],
   [-1, Conv, [1024, 256, 1, 1]], # 88

   [-1, MP, [256, 256]],
   [-1, Conv, [256, 256, 1, 1]],
   [-3, Conv, [256, 256, 1, 1]],
   [-1, Conv, [256, 256, 3, 2]],
   [[-1, -3, 51], Concat, [1]],

   [-1, Conv, [1024, 512, 1, 1]], # ELAN_H_4
   [-2, Conv, [1024, 512, 1, 1]],
   [-1, Conv, [512, 256, 3, 1]],
   [-1, Conv, [256, 256, 3, 1]],
   [-1, Conv, [256, 256, 3, 1]],
   [-1, Conv, [256, 256, 3, 1]],
   [[-1, -2, -3, -4, -5, -6], Concat, [1]],
   [-1, Conv, [2048, 512, 1, 1]], # 101

   [75, RepConv, [128, 256, 3, 1]],
   [88, RepConv, [256, 512, 3, 1]],
   [101, RepConv, [512, 1024, 3, 1]],
  ]
head:
  [
   [[102,103,104], IDetect, [[256, 512, 1024], nc, anchors]],   # Detect(P3, P4, P5)
  ]