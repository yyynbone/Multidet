#                 from  n    params  module                                  arguments
#  0                -1       304  models.layers.common_layer.Conv         [1, 8, 6, 2, 2]
#  1                -1      1184  models.layers.common_layer.Conv         [8, 16, 3, 2]
#  2                -1      1248  models.layers.yolo_layer.C3             [16, 16, 1]
#  3                -1      4672  models.layers.common_layer.Conv         [16, 32, 3, 2]
#  4                -1      7424  models.layers.yolo_layer.C3             [32, 32, 2]
#  5                -1     18560  models.layers.common_layer.Conv         [32, 64, 3, 2]
#  6                -1     39552  models.layers.yolo_layer.C3             [64, 64, 3]
#  7                -1     73984  models.layers.common_layer.Conv         [64, 128, 3, 2]
#  8                -1     74496  models.layers.yolo_layer.C3             [128, 128, 1]
#  9                -1     41344  models.layers.yolo_layer.SPPF           [128, 128, 5]
# 10                -1       129  models.head.Classify                    [128, 1]
#Model Summary: 155layers,  262897 parameters, 262897 gradients,image size is 640, 0.7 GFLOPs in cpu

# Parameters
depth_multiple: 0.33  # model depth multiple
width_multiple: 0.25 # layer channel multiple
depth_layer: [C3]
width_layer: [Conv, C3, SPPF, ObjClassify]
nc: 80

backbone:
  [[-1, Conv, [32, 6, 2, 2]],  # 0-P1/2
   [-1, Conv, [32, 64, 3, 2]],  # 1-P2/4
   [-1, C3, [64, 64, 3]],
   [-1, Conv, [64, 128, 3, 2]],  # 3-P3/8
   [-1, C3, [128, 128, 6]],
   [-1, Conv, [128, 256, 3, 2]],  # 5-P4/16
   [-1, C3, [256, 256, 9]],
   [-1, Conv, [256, 512, 3, 2]], # 7-P5/32
   [-1, C3, [512, 512, 3]],
   [-1, SPPF, [512, 512, 5]],  # 9
  ]


head:
  [
    #[[17, 20, 23], Classify, [1024, 2]],  # Detect(P3, P4, P5)
    [-1, ObjClassify, [512, nc]],  # Detect(P3, P4, P5)
  ]

